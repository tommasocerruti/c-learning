// idea: we know we need to position each queen on a different column and row
// so at step i, we have placed the queens in the columns from 1 to (i-1)-th
// which respectively for indices it is from 0 to (i-2)-th

int position(int num, int board[N][N]){
    int i, z, k;
    if (num>N)
        return 1;
    for (z=0;z<N,z++){
        if (board[num][z]==0){
            for (i=0;i<N;i++){
                // horizontal and vertical checks
                board[num][i]--;
                board[i][z]--;
            }
            for (k=0;k<N;k++){
                if ((num+z-k>=0)&&(num+z-k<N))
                    mat[k][num+z-k]--;
                if ((num-z-k>=0)&&(num+z-k<N))
                    mat[k][num+z-k]--;
            }
            board[num][z]=1;
            if (position(num+1,board))
                return 1;
            board[num][z]=0;
            for (k=0;k<N;k++){
                if ((num+z-k>=0)&&(num+z-k<N))
                    mat[k][num+z-k]++;
                if ((num-z-k>=0)&&(num+z-k<N))
                    mat[k][num+z-k]++;
            }
            for (i=0;i<N;i++){
                 // horizontal and vertical checks
                 board[num][i]++;
                 board[i][z]++;
            }
        }
    }
    return 0;
}